/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

/* Key index
 0  1  2  3  4  5    6  7  8  9 10 11
12 13 14 15 16 17   18 19 20 21 22 23
24 25 26 27 28 29   30 31 32 33 34 35
         36 37 38   39 40 41     */


#define TAPPING_TERM 180 
#define QUICK_TAP 0

#define _DEFAULT 0
#define _NUMBER 1
#define _SYMBOL 2
#define _ADJUST 3

/ {
        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <TAPPING_TERM>;
                        quick-tap-ms = <QUICK_TAP>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
                bhm: balanced_homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <TAPPING_TERM>;
                        quick-tap-ms = <QUICK_TAP>;
                        global-quick-tap;
                        flavor = "balanced";
                        bindings = <&kp>, <&kp>;
                };
                qt: quick_tap {
                        compatible = "zmk,behavior-hold-tap";
                        label = "QUICK_TAP";
                        #binding-cells = <2>;
                        flavor = "tap-preferred";
                        tapping-term-ms = <TAPPING_TERM>;
                        quick-tap-ms = <QUICK_TAP>;
                        bindings = <&kp>, <&kp>;
                };
                ptr: positional_hold_tap_right {
                        compatible = "zmk,behavior-hold-tap";
                        label = "POSITIONAL_HOLD_TAP_RIGHT";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <250>;
                        global-quick-tap;
                        quick-tap-ms = <150>;
                        bindings = <&kp>, <&kp>;
                        hold-trigger-key-positions = <1 2 3 4 5 13 14 15 16 17 25 26 27 28 29>;
                };
        };

        combos {
	        compatible = "zmk,combos";

                combo_adjust {
                        timeout-ms = <50>;
                        key-positions = <36 37>;
                        bindings = <&mo _ADJUST>;
                };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
                        bindings = <
   &gresc       &kp Q        &kp W       &kp E        &kp R        &kp T         &kp Y   &kp U        &kp I       &kp O       &kp P           &kp BSPC
   &qt BSPC TAB &bhm LCTRL A &bhm LALT S &bhm LCMD D  &bhm LSHFT F &kp G         &kp H   &ptr RSHFT J &ptr RCMD K &ptr RALT L &ptr RCTRL SEMI &kp SQT
   &kp LSHFT    &kp Z        &kp X       &kp C        &kp V        &kp B         &kp N   &kp M        &kp COMMA   &kp DOT     &kp FSLH        &kp ESC
                                         &kp LGUI     &mo 1        &kp SPACE     &kp RET &mo 2        &kp RALT
                        >;
                };

                lower_layer {
                        label = "NUMBER";
                        bindings = <
   &trans     &kp N1 &kp N2 &kp N3 &kp N4 &kp N5         &kp N6   &kp N7   &kp N8     &kp N9         &kp N0   &kp BSPC
   &kp BSPC   &trans &trans &trans &trans &trans         &kp LEFT &kp DOWN &kp UP     &kp RIGHT      &trans   &trans
   &kp LSHFT  &trans &trans &trans &trans &trans         &trans   &trans   &kp KP_DOT &kp LS(KP_DOT) &kp C_PP &kp C_MUTE
                        &kp LGUI &trans &kp SPACE        &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
                        label = "SYMBOL";
                        bindings = <
   &trans    &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &trans    &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

                adjust_layer {
                        label = "ADJUST";
                        bindings = <
   &trans     &trans       &trans       &trans       &trans       &trans           &trans     &trans       &trans       &trans &trans &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &trans &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans           &trans     &trans       &trans       &trans &trans &trans
                          	        &kp LGUI     &trans       &kp SPACE        &kp RET  &trans   &kp RALT
                        >;
                };
        };
};