#define TAPPING_TERM_MS 280
#define QUICK_TAP_MS 175
#define GLOBAL_QUICK_TAP_MS 150

// cancel caps-word, num-word and smart-mouse
#define CANCEL      &kp K_CANCEL

&mt {
  flavor = "balanced";
  tapping-term-ms = <TAPPING_TERM_MS>;
  quick-tap-ms = <QUICK_TAP_MS>;
  global-quick-tap-ms = <GLOBAL_QUICK_TAP_MS>;
  // global-quick-tap;
};

&lt {
  flavor = "balanced";
  tapping-term-ms = <TAPPING_TERM_MS>;
  quick-tap-ms = <QUICK_TAP_MS>;
  global-quick-tap-ms = <GLOBAL_QUICK_TAP_MS>;
};

&sk {
  quick-release;
};

// mods deactivate caps-word, requires PR #1451
&caps_word {
  continue-list = <UNDERSCORE MINUS BSPC DEL N1 N2 N3 N4 N5 N6 N7 N8 N9 N0>;
  /delete-property/ ignore-modifiers;
};

// num-word, requires PR #1451
&num_word {
  layers = <L2>;
  continue-list = <BSPC DEL DOT COMMA PLUS MINUS STAR FSLH EQUAL>;
};

/ {
  behaviors {
    /*
    - tap: sticky shift
    - double-tap: caps-word (shift + tap mod-morph)
    - hold: shift

    From: https: //github.com/urob/zmk-config/
     */
    smart_shift: smart_shift {
      label = "SMART_SHIFT";
      compatible = "zmk,behavior-mod-morph";
      bindings = <&sk RSHFT>, <&caps_word>;
      mods = <(MOD_RSFT)>;
      #binding-cells = <0>;
    };

    /*
    - tap: sticky ctrl
    - hold: ctrl
    - double-tap: sticky meh (ctrl + tap mod-morph)
    - tap + hold: meh (ctrl + hold mod-morph)

    From: https: //github.com/urob/zmk-config/
     */
    ctrl_meh: ctrl_meh {
      label = "CTRL_MEH";
      compatible = "zmk,behavior-mod-morph";
      bindings = <&sk LCTRL>, <&sk MEH>;
      mods = <(MOD_LCTL)>;
      #binding-cells = <0>;
    };

    /*
    - tap: backspace
    - hold: repeat backspace
    - shift + tap: delete
    - shift + hold: repeat delete

    From: https: //zmk.dev/docs/behaviors/mod-morph#advanced-configuration
     */
    bspc_del: backspace_delete {
      label = "BACKSPACE_DELETE";
      compatible = "zmk,behavior-mod-morph";
      bindings = <&kp BACKSPACE>, <&kp DELETE>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
      #binding-cells = <0>;
    };

    /*
    - tap: brightness up
    - hold: repeat brightness up
    - shift + tap: brightness down
    - shift + hold: repeat brightness down
     */
    brightness: brightness {
      label = "BRIGHTNESS";
      compatible = "zmk,behavior-mod-morph";
      bindings = <&kp C_BRI_UP>, <&kp C_BRI_DN>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
      #binding-cells = <0>;
    };

    /*
    - tap: next track
    - shift + tap: prev track
     */
    next_prev: next_prev {
      label = "NEXT_PREV_TRACK";
      compatible = "zmk,behavior-mod-morph";
      bindings = <&kp C_NEXT>, <&kp C_PREV>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
      #binding-cells = <0>;
    };

    /*
    - tap: next track
    - shift + tap: prev track
     */
    volume: volume {
      label = "VOLUME";
      compatible = "zmk,behavior-mod-morph";
      bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
      #binding-cells = <0>;
    };
  };
};
